{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst ContactForm = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n};\n\n_s(ContactForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useFormik","validate","values","errors","firstName","length","lastName","email","test","ContactForm","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"sources":["/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx"],"sourcesContent":["import React from 'react';\n import { useFormik } from 'formik';\n \n const validate = values => {\n   const errors = {};\n \n   if (!values.firstName) {\n     errors.firstName = 'Required';\n   } else if (values.firstName.length > 15) {\n     errors.firstName = 'Must be 15 characters or less';\n   }\n \n   if (!values.lastName) {\n     errors.lastName = 'Required';\n   } else if (values.lastName.length > 20) {\n     errors.lastName = 'Must be 20 characters or less';\n   }\n \n   if (!values.email) {\n     errors.email = 'Required';\n   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n     errors.email = 'Invalid email address';\n   }\n \n   return errors;\n };\n \n const ContactForm = () => {\n   const formik = useFormik({\n     initialValues: {\n       firstName: '',\n       lastName: '',\n       email: '',\n     },\n     validate,\n     onSubmit: values => {\n       alert(JSON.stringify(values, null, 2));\n     },\n   });\n   return (\n     <form onSubmit={formik.handleSubmit}>\n       <label htmlFor=\"firstName\">First Name</label>\n       <input\n         id=\"firstName\"\n         name=\"firstName\"\n         type=\"text\"\n         onChange={formik.handleChange}\n         onBlur={formik.handleBlur}\n         value={formik.values.firstName}\n       />\n       {formik.touched.firstName && formik.errors.firstName ? (\n         <div>{formik.errors.firstName}</div>\n       ) : null}\n \n       <label htmlFor=\"lastName\">Last Name</label>\n       <input\n         id=\"lastName\"\n         name=\"lastName\"\n         type=\"text\"\n         onChange={formik.handleChange}\n         onBlur={formik.handleBlur}\n         value={formik.values.lastName}\n       />\n       {formik.touched.lastName && formik.errors.lastName ? (\n         <div>{formik.errors.lastName}</div>\n       ) : null}\n \n       <label htmlFor=\"email\">Email Address</label>\n       <input\n         id=\"email\"\n         name=\"email\"\n         type=\"email\"\n         onChange={formik.handleChange}\n         onBlur={formik.handleBlur}\n         value={formik.values.email}\n       />\n       {formik.touched.email && formik.errors.email ? (\n         <div>{formik.errors.email}</div>\n       ) : null}\n \n       <button type=\"submit\">Submit</button>\n     </form>\n   );\n };\n\nexport default ContactForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}