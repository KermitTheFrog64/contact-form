{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/05/contact-form/src/ContactForm/ContactForm.jsx\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        as: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 6\n  }, this);\n};\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","ContactForm","firstName","email","object","string","max","required","values","setSubmitting","setTimeout","alert","JSON","stringify"],"sources":["/home/natalie/ReactProjects/05/contact-form/src/ContactForm/ContactForm.jsx"],"sourcesContent":["import React from 'react';\n import { Formik, Field, Form, ErrorMessage } from 'formik';\n import * as Yup from 'yup';\n \n const ContactForm = () => {\n   return (\n     <Formik\n       initialValues={{ firstName: '', email: '' }}\n\n       validationSchema={Yup.object({\n         firstName: Yup.string()\n           .max(15, 'Must be 15 characters or less')\n           .required('Required'),\n         email: Yup.string().email('Invalid email address').required('Required'),\n       })}\n\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       <Form>\n         <label htmlFor=\"firstName\">First Name</label>\n         <Field name=\"firstName\" type=\"text\" as='textarea' />\n         <ErrorMessage name=\"firstName\" />\n \n         <label htmlFor=\"email\">Email Address</label>\n         <Field name=\"email\" type=\"email\" />\n         <ErrorMessage name=\"email\" />\n \n         <button type=\"submit\">Submit</button>\n       </Form>\n     </Formik>\n   );\n };\n\n\nexport default ContactForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEC,SAAS,EAAE,EAAb;MAAiBC,KAAK,EAAE;IAAxB,CADjB;IAGE,gBAAgB,EAAEH,GAAG,CAACI,MAAJ,CAAW;MAC3BF,SAAS,EAAEF,GAAG,CAACK,MAAJ,GACRC,GADQ,CACJ,EADI,EACA,+BADA,EAERC,QAFQ,CAEC,UAFD,CADgB;MAI3BJ,KAAK,EAAEH,GAAG,CAACK,MAAJ,GAAaF,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD;IAJoB,CAAX,CAHpB;IAUE,QAAQ,EAAE,CAACC,MAAD,WAA+B;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MACvCC,UAAU,CAAC,MAAM;QACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QACAC,aAAa,CAAC,KAAD,CAAb;MACD,CAHS,EAGP,GAHO,CAAV;IAID,CAfH;IAAA,uBAiBE,QAAC,IAAD;MAAA,wBACE;QAAO,OAAO,EAAC,WAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,IAAI,EAAC,MAA7B;QAAoC,EAAE,EAAC;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,YAAD;QAAc,IAAI,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,IAAI,EAAC;MAAzB;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,YAAD;QAAc,IAAI,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAPF,eASE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EAjBF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAhCD;;KAAMR,W;AAmCP,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}