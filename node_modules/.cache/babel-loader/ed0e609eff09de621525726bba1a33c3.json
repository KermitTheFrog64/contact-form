{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      type: \"text\",\n      ...formik.getFieldProps('firstName')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      type: \"text\",\n      ...formik.getFieldProps('lastName')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      ...formik.getFieldProps('email')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }, this);\n};\n\n_s(ContactForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useFormik","Yup","ContactForm","formik","initialValues","firstName","lastName","email","validationSchema","object","string","max","required","onSubmit","values","alert","JSON","stringify","handleSubmit","getFieldProps","touched","errors"],"sources":["/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx"],"sourcesContent":["import React from 'react';\n import { useFormik } from 'formik';\n import * as Yup from 'yup';\n \n const ContactForm = () => {\n   const formik = useFormik({\n     initialValues: {\n       firstName: '',\n       lastName: '',\n       email: '',\n     },\n     validationSchema: Yup.object({\n       firstName: Yup.string()\n         .max(15, 'Must be 15 characters or less')\n         .required('Required'),\n       lastName: Yup.string()\n         .max(20, 'Must be 20 characters or less')\n         .required('Required'),\n       email: Yup.string().email('Invalid email address').required('Required'),\n     }),\n     onSubmit: values => {\n       alert(JSON.stringify(values, null, 2));\n     },\n   });\n   return (\n     <form onSubmit={formik.handleSubmit}>\n       <label htmlFor=\"firstName\">First Name</label>\n       <input\n         id=\"firstName\"\n         type=\"text\"\n         {...formik.getFieldProps('firstName')}\n       />\n       {formik.touched.firstName && formik.errors.firstName ? (\n         <div>{formik.errors.firstName}</div>\n       ) : null}\n \n       <label htmlFor=\"lastName\">Last Name</label>\n       <input id=\"lastName\" type=\"text\" {...formik.getFieldProps('lastName')} />\n       {formik.touched.lastName && formik.errors.lastName ? (\n         <div>{formik.errors.lastName}</div>\n       ) : null}\n \n       <label htmlFor=\"email\">Email Address</label>\n       <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n       {formik.touched.email && formik.errors.email ? (\n         <div>{formik.errors.email}</div>\n       ) : null}\n \n       <button type=\"submit\">Submit</button>\n     </form>\n   );\n };\n\nexport default ContactForm;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACvBI,aAAa,EAAE;MACbC,SAAS,EAAE,EADE;MAEbC,QAAQ,EAAE,EAFG;MAGbC,KAAK,EAAE;IAHM,CADQ;IAMvBC,gBAAgB,EAAEP,GAAG,CAACQ,MAAJ,CAAW;MAC3BJ,SAAS,EAAEJ,GAAG,CAACS,MAAJ,GACRC,GADQ,CACJ,EADI,EACA,+BADA,EAERC,QAFQ,CAEC,UAFD,CADgB;MAI3BN,QAAQ,EAAEL,GAAG,CAACS,MAAJ,GACPC,GADO,CACH,EADG,EACC,+BADD,EAEPC,QAFO,CAEE,UAFF,CAJiB;MAO3BL,KAAK,EAAEN,GAAG,CAACS,MAAJ,GAAaH,KAAb,CAAmB,uBAAnB,EAA4CK,QAA5C,CAAqD,UAArD;IAPoB,CAAX,CANK;IAevBC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD;EAjBsB,CAAD,CAAxB;EAmBA,oBACE;IAAM,QAAQ,EAAEX,MAAM,CAACe,YAAvB;IAAA,wBACE;MAAO,OAAO,EAAC,WAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,EAAE,EAAC,WADL;MAEE,IAAI,EAAC,MAFP;MAAA,GAGMf,MAAM,CAACgB,aAAP,CAAqB,WAArB;IAHN;MAAA;MAAA;MAAA;IAAA,QAFF,EAOGhB,MAAM,CAACiB,OAAP,CAAef,SAAf,IAA4BF,MAAM,CAACkB,MAAP,CAAchB,SAA1C,gBACC;MAAA,UAAMF,MAAM,CAACkB,MAAP,CAAchB;IAApB;MAAA;MAAA;MAAA;IAAA,QADD,GAEG,IATN,eAWE;MAAO,OAAO,EAAC,UAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE;MAAO,EAAE,EAAC,UAAV;MAAqB,IAAI,EAAC,MAA1B;MAAA,GAAqCF,MAAM,CAACgB,aAAP,CAAqB,UAArB;IAArC;MAAA;MAAA;MAAA;IAAA,QAZF,EAaGhB,MAAM,CAACiB,OAAP,CAAed,QAAf,IAA2BH,MAAM,CAACkB,MAAP,CAAcf,QAAzC,gBACC;MAAA,UAAMH,MAAM,CAACkB,MAAP,CAAcf;IAApB;MAAA;MAAA;MAAA;IAAA,QADD,GAEG,IAfN,eAiBE;MAAO,OAAO,EAAC,OAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBF,eAkBE;MAAO,EAAE,EAAC,OAAV;MAAkB,IAAI,EAAC,OAAvB;MAAA,GAAmCH,MAAM,CAACgB,aAAP,CAAqB,OAArB;IAAnC;MAAA;MAAA;MAAA;IAAA,QAlBF,EAmBGhB,MAAM,CAACiB,OAAP,CAAeb,KAAf,IAAwBJ,MAAM,CAACkB,MAAP,CAAcd,KAAtC,gBACC;MAAA,UAAMJ,MAAM,CAACkB,MAAP,CAAcd;IAApB;MAAA;MAAA;MAAA;IAAA,QADD,GAEG,IArBN,eAuBE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CA/CD;;GAAML,W;UACWF,S;;;KADXE,W;AAiDP,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}