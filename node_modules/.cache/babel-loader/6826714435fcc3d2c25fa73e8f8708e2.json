{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        ...formik.getFieldProps('firstName')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        ...formik.getFieldProps('lastName')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        ...formik.getFieldProps('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 6\n  }, this);\n};\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","Formik","Yup","ContactForm","firstName","lastName","email","object","string","max","required","values","setSubmitting","setTimeout","alert","JSON","stringify","formik","handleSubmit","getFieldProps","touched","errors"],"sources":["/home/natalie/ReactProjects/05/contact-form/src/ContactForm.jsx"],"sourcesContent":["import React from 'react';\n import { Formik } from 'formik';\n import * as Yup from 'yup';\n \n const ContactForm = () => {\n   return (\n     <Formik\n       initialValues={{ firstName: '', lastName: '', email: '' }}\n       validationSchema={Yup.object({\n         firstName: Yup.string()\n           .max(15, 'Must be 15 characters or less')\n           .required('Required'),\n         lastName: Yup.string()\n           .max(20, 'Must be 20 characters or less')\n           .required('Required'),\n         email: Yup.string().email('Invalid email address').required('Required'),\n       })}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {formik => (\n         <form onSubmit={formik.handleSubmit}>\n           <label htmlFor=\"firstName\">First Name</label>\n           <input\n             id=\"firstName\"\n             type=\"text\"\n             {...formik.getFieldProps('firstName')}\n           />\n           {formik.touched.firstName && formik.errors.firstName ? (\n             <div>{formik.errors.firstName}</div>\n           ) : null}\n \n           <label htmlFor=\"lastName\">Last Name</label>\n           <input\n             id=\"lastName\"\n             type=\"text\"\n             {...formik.getFieldProps('lastName')}\n           />\n           {formik.touched.lastName && formik.errors.lastName ? (\n             <div>{formik.errors.lastName}</div>\n           ) : null}\n \n           <label htmlFor=\"email\">Email Address</label>\n           <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n           {formik.touched.email && formik.errors.email ? (\n             <div>{formik.errors.email}</div>\n           ) : null}\n \n           <button type=\"submit\">Submit</button>\n         </form>\n       )}\n     </Formik>\n   );\n };\n\n\nexport default ContactForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEC,SAAS,EAAE,EAAb;MAAiBC,QAAQ,EAAE,EAA3B;MAA+BC,KAAK,EAAE;IAAtC,CADjB;IAEE,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAW;MAC3BH,SAAS,EAAEF,GAAG,CAACM,MAAJ,GACRC,GADQ,CACJ,EADI,EACA,+BADA,EAERC,QAFQ,CAEC,UAFD,CADgB;MAI3BL,QAAQ,EAAEH,GAAG,CAACM,MAAJ,GACPC,GADO,CACH,EADG,EACC,+BADD,EAEPC,QAFO,CAEE,UAFF,CAJiB;MAO3BJ,KAAK,EAAEJ,GAAG,CAACM,MAAJ,GAAaF,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD;IAPoB,CAAX,CAFpB;IAWE,QAAQ,EAAE,CAACC,MAAD,WAA+B;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MACvCC,UAAU,CAAC,MAAM;QACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QACAC,aAAa,CAAC,KAAD,CAAb;MACD,CAHS,EAGP,GAHO,CAAV;IAID,CAhBH;IAAA,UAkBGK,MAAM,iBACL;MAAM,QAAQ,EAAEA,MAAM,CAACC,YAAvB;MAAA,wBACE;QAAO,OAAO,EAAC,WAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,EAAE,EAAC,WADL;QAEE,IAAI,EAAC,MAFP;QAAA,GAGMD,MAAM,CAACE,aAAP,CAAqB,WAArB;MAHN;QAAA;QAAA;QAAA;MAAA,QAFF,EAOGF,MAAM,CAACG,OAAP,CAAehB,SAAf,IAA4Ba,MAAM,CAACI,MAAP,CAAcjB,SAA1C,gBACC;QAAA,UAAMa,MAAM,CAACI,MAAP,CAAcjB;MAApB;QAAA;QAAA;QAAA;MAAA,QADD,GAEG,IATN,eAWE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE;QACE,EAAE,EAAC,UADL;QAEE,IAAI,EAAC,MAFP;QAAA,GAGMa,MAAM,CAACE,aAAP,CAAqB,UAArB;MAHN;QAAA;QAAA;QAAA;MAAA,QAZF,EAiBGF,MAAM,CAACG,OAAP,CAAef,QAAf,IAA2BY,MAAM,CAACI,MAAP,CAAchB,QAAzC,gBACC;QAAA,UAAMY,MAAM,CAACI,MAAP,CAAchB;MAApB;QAAA;QAAA;QAAA;MAAA,QADD,GAEG,IAnBN,eAqBE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF,eAsBE;QAAO,EAAE,EAAC,OAAV;QAAkB,IAAI,EAAC,OAAvB;QAAA,GAAmCY,MAAM,CAACE,aAAP,CAAqB,OAArB;MAAnC;QAAA;QAAA;QAAA;MAAA,QAtBF,EAuBGF,MAAM,CAACG,OAAP,CAAed,KAAf,IAAwBW,MAAM,CAACI,MAAP,CAAcf,KAAtC,gBACC;QAAA,UAAMW,MAAM,CAACI,MAAP,CAAcf;MAApB;QAAA;QAAA;QAAA;MAAA,QADD,GAEG,IAzBN,eA2BE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA;EAnBJ;IAAA;IAAA;IAAA;EAAA,QADF;AAoDD,CArDD;;KAAMH,W;AAwDP,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}