{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/05/contact-form/src/ContactForm/ContactForm.jsx\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"If you have any questions please don't hesitate to contact us. We're here to help!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        message: ''\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        message: Yup.string().max(15, 'Must be 15 characters or less').required('Required')\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          type: \"text\",\n          as: \"textarea\",\n          placeholder: \"Your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","ContactForm","email","message","object","string","required","max","values","setSubmitting","setTimeout","alert","JSON","stringify"],"sources":["/home/natalie/ReactProjects/05/contact-form/src/ContactForm/ContactForm.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst ContactForm = () => {\n  return (\n    <div>\n      <h1>Contact Us</h1>\n      <div>If you have any questions please don't hesitate to contact us. We're here to help!</div>\n    <Formik\n      initialValues={{ email: '', message: '' }}\n\n      validationSchema={Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        message: Yup.string()\n          .max(15, 'Must be 15 characters or less')\n          .required('Required')\n\n      })}\n\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <Form>\n\n        <Field name=\"email\" type=\"email\" placeholder=\"Your email\" />\n        <ErrorMessage name=\"email\" />\n\n        <Field name=\"firstName\" type=\"text\" as='textarea' placeholder=\"Your message\" />\n        <ErrorMessage name=\"firstName\" />\n\n        <button type=\"submit\">Send</button>\n      </Form>\n    </Formik>\n    </div>\n  );\n};\n\n\nexport default ContactForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGA,QAAC,MAAD;MACE,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAT;QAAaC,OAAO,EAAE;MAAtB,CADjB;MAGE,gBAAgB,EAAEH,GAAG,CAACI,MAAJ,CAAW;QAC3BF,KAAK,EAAEF,GAAG,CAACK,MAAJ,GAAaH,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD,CADoB;QAE3BH,OAAO,EAAEH,GAAG,CAACK,MAAJ,GACNE,GADM,CACF,EADE,EACE,+BADF,EAEND,QAFM,CAEG,UAFH;MAFkB,CAAX,CAHpB;MAWE,QAAQ,EAAE,CAACE,MAAD,WAA+B;QAAA,IAAtB;UAAEC;QAAF,CAAsB;QACvCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;UACAC,aAAa,CAAC,KAAD,CAAb;QACD,CAHS,EAGP,GAHO,CAAV;MAID,CAhBH;MAAA,uBAkBE,QAAC,IAAD;QAAA,wBAEE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,IAAI,EAAC,OAAzB;UAAiC,WAAW,EAAC;QAA7C;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,YAAD;UAAc,IAAI,EAAC;QAAnB;UAAA;UAAA;UAAA;QAAA,QAHF,eAKE,QAAC,KAAD;UAAO,IAAI,EAAC,WAAZ;UAAwB,IAAI,EAAC,MAA7B;UAAoC,EAAE,EAAC,UAAvC;UAAkD,WAAW,EAAC;QAA9D;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,YAAD;UAAc,IAAI,EAAC;QAAnB;UAAA;UAAA;UAAA;QAAA,QANF,eAQE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IAlBF;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CApCD;;KAAMR,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}